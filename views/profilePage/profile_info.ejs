<%- include('../layouts/header.ejs') %>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Profile</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        :root {
            --primary-color: #4361ee;
            --primary-light: #4895ef;
            --primary-dark: #3f37c9;
            --secondary-color: #f72585;
            --text-color: #2b2d42;
            --text-light: #6c757d;
            --background-color: #f8f9fa;
            --card-color: #ffffff;
            --border-color: #dee2e6;
            --success-color: #4cc9f0;
            --error-color: #f72585;
            --border-radius: 12px;
            --box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
            --transition: all 0.3s ease;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background-color: var(--background-color);
            color: var(--text-color);
            line-height: 1.6;
            padding: 0;
            margin: 0;
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 20px;
            background-color: var(--card-color);
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
            position: sticky;
            top: 0;
            z-index: 100;
        }

        .header-title {
            font-weight: 600;
            font-size: 1.2rem;
        }

        .back-button {
            display: flex;
            align-items: center;
            color: var(--text-color);
            text-decoration: none;
            transition: var(--transition);
        }

        .back-button:hover {
            color: var(--primary-color);
        }

        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }

        .profile-card {
            background-color: var(--card-color);
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            padding: 30px;
            margin-bottom: 30px;
        }

        .profile-image-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            margin-bottom: 30px;
            position: relative;
        }

        .profile-image {
            width: 120px;
            height: 120px;
            border-radius: 50%;
            object-fit: cover;
            border: 3px solid white;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }

        .camera-icon {
            position: absolute;
            bottom: 0;
            right: calc(50% - 70px);
            background-color: var(--primary-color);
            color: white;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            box-shadow: 0 4px 10px rgba(67, 97, 238, 0.3);
            transition: var(--transition);
        }

        .camera-icon:hover {
            transform: scale(1.1);
            background-color: var(--primary-dark);
        }

        .form-grid {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 20px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group.full-width {
            grid-column: span 2;
        }

        .form-label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: var(--text-color);
            font-size: 0.9rem;
        }

        .form-control {
            width: 100%;
            padding: 14px 16px;
            border: 1px solid var(--border-color);
            border-radius: var(--border-radius);
            font-size: 13px;
            transition: var(--transition);
            background-color: #f8fafc;
        }

        .form-control:focus {
            outline: none;
            border-color: var(--primary-light);
            box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.15);
        }

        .form-control:disabled,
        .form-control[readonly] {
            background-color: #f1f3f5;
            cursor: not-allowed;
        }

        textarea.form-control {
            min-height: 120px;
            resize: vertical;
        }

        .btn {
            display: inline-block;
            font-weight: 600;
            text-align: center;
            white-space: nowrap;
            vertical-align: middle;
            user-select: none;
            border: none;
            padding: 16px 24px;
            font-size: 1rem;
            line-height: 1.5;
            border-radius: var(--border-radius);
            transition: var(--transition);
            cursor: pointer;
            width: 100%;
        }

        .btn-primary {
            color: white;
            background-color: var(--primary-color);
            box-shadow: 0 4px 15px rgba(67, 97, 238, 0.3);
        }

        .btn-primary:hover {
            background-color: var(--primary-dark);
            transform: translateY(-2px);
        }

        .btn-primary:active {
            transform: translateY(0);
        }

        /* Responsive styles */
        @media (max-width: 768px) {
            .form-grid {
                grid-template-columns: 1fr;
            }

            .form-group.full-width {
                grid-column: span 1;
            }

            .profile-card {
                padding: 20px;
            }
        }

        /* Animation */
        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .profile-card {
            animation: fadeIn 0.5s ease-out forwards;
        }

        /* Custom scrollbar */
        ::-webkit-scrollbar {
            width: 8px;
        }

        ::-webkit-scrollbar-track {
            background: #f1f1f1;
        }

        ::-webkit-scrollbar-thumb {
            background: #c5c5c5;
            border-radius: 10px;
        }

        ::-webkit-scrollbar-thumb:hover {
            background: #a8a8a8;
        }
    </style>
</head>
<body>
    <header class="header">
        <a href="/profilePage/profile" class="back-button">
            <span class="material-symbols-outlined">arrow_back</span>
        </a>
        <h1 class="header-title">Edit Profile</h1>
        <div></div> <!-- Empty div for flex spacing -->
    </header>

    <div class="container">
        <div class="profile-card">
            <div class="profile-image-container">
                <img src="/profile_uploads/<%= getProfileInfoitems.profile_image %>" id="profileImageData" class="profile-image" alt="Profile Image">
                <label for="profile_image" class="camera-icon">
                    <span class="material-symbols-outlined">photo_camera</span>
                </label>
                <input type="file" hidden name="file" id="profile_image" accept=".jpg,.jpeg,.png, .PNG, .JPEG" onchange="previewImage(this)" required>
            </div>

            <form id="profileForm">
                <div class="form-grid">
                    <div class="form-group">
                        <label for="first_name" class="form-label">First Name</label>
                        <input type="text" id="first_name" name="first_name" class="form-control" value="<%= getProfileInfoitems.first_name%>" required>
                    </div>

                    <div class="form-group">
                        <label for="last_name" class="form-label">Last Name</label>
                        <input type="text" id="last_name" name="last_name" class="form-control" value="<%= getProfileInfoitems.last_name%>" required>
                    </div>

                    <div class="form-group">
                        <label for="email" class="form-label">Email</label>
                        <input type="email" id="email" name="email" class="form-control" value="<%= getProfileInfoitems.email%>" required>
                    </div>

                    <div class="form-group">
                        <label for="username" class="form-label">Username</label>
                        <input type="text" id="username" name="username" class="form-control" readonly value="<%= getProfileInfoitems.username%>" required>
                    </div>

                    <div class="form-group">
                        <label for="tel" class="form-label">Phone Number</label>
                        <input type="tel" id="tel" name="tel" class="form-control" value="<%= getProfileInfoitems.phone%>" required>
                    </div>

                    <div class="form-group">
                        <label for="address" class="form-label">Address</label>
                        <input type="text" id="address" name="address" class="form-control" value="<%= getProfileInfoitems.address%>" required>
                    </div>

                    <div class="form-group">
                        <label for="city" class="form-label">City</label>
                        <input type="text" id="city" name="city" class="form-control" value="<%= getProfileInfoitems.city%>" required>
                    </div>

                    <div class="form-group">
                        <label for="state" class="form-label">State</label>
                        <input type="text" id="state" name="state" class="form-control" value="<%= getProfileInfoitems.state%>" required>
                    </div>

                    <div class="form-group">
                        <label for="country" class="form-label">Country</label>
                        <input type="text" id="country" name="country" class="form-control" value="<%= getProfileInfoitems.country%>" required>
                    </div>

                    <div class="form-group">
                        <label for="business_name" class="form-label">Business Name</label>
                        <input type="text" id="business_name" name="business_name" class="form-control" value="<%= getProfileInfoitems.business_name%>" required>
                    </div>

                    <div class="form-group full-width">
                        <label for="business_address" class="form-label">Business Address</label>
                        <input type="text" id="business_address" name="business_address" class="form-control" value="<%= getProfileInfoitems.business_address%>" required>
                    </div>

                    <div class="form-group full-width">
                        <label for="bio" class="form-label">Bio</label>
                        <textarea id="bio" name="bio" class="form-control"><%= getProfileInfoitems.bio%></textarea>
                    </div>

                    <div class="form-group full-width">
                        <button type="button" class="btn btn-primary" onclick="updateData()">Save Changes</button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <script>
        let profileImageData = document.getElementById("profileImageData");
        let profile_image = document.getElementById("profile_image");

        function previewImage(input) {
            let file = input.files[0];
            profileImageData.src = URL.createObjectURL(file);
            console.log(URL.createObjectURL(file));
        }

        function updateData() {
            let formData = new FormData();
            formData.append('first_name', document.getElementById("first_name").value);
            formData.append('last_name', document.getElementById("last_name").value);
            formData.append('email', document.getElementById("email").value);
            formData.append('address', document.getElementById("address").value);
            formData.append('city', document.getElementById("city").value);
            formData.append('state', document.getElementById("state").value);
            formData.append('country', document.getElementById("country").value);
            formData.append('tel', document.getElementById("tel").value);
            formData.append('bio', document.getElementById("bio").value);
            formData.append('business_name', document.getElementById("business_name").value);
            formData.append('business_address', document.getElementById("business_address").value);

            let file = profile_image.files[0];
            if (!file) {
                file = `<%= getProfileInfoitems.profile_image%>`;
                formData.append("existing_file", file);
            } else {
                formData.append("file", profile_image.files[0]);
            }

            let url = "/profilePage/UpdateprofileInfo";
            fetch(url, {
                method: "POST",
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.status === "Error") {
                    Swal.fire({
                        title: 'Error!',
                        text: data.message,
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                } else if (data.status === 'Success') {
                    Swal.fire({
                        title: 'Success!',
                        text: data.message,
                        icon: 'success',
                        confirmButtonText: 'OK'
                    });
                    setTimeout(() => {
                        window.location.href = '/profilePage/profile';
                    }, 1500);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    title: 'Error!',
                    text: 'Something went wrong. Please try again.',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            });
        }
    </script>
</body>
</html>
<%- include('../layouts/footer.ejs') %>